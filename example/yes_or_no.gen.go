// Code generated by go-enum; DO NOT EDIT.
// Laste generated at 2019-11-12T09:46:37+01:00.
// go-enum: https://github.com/bombsimon/enum

package example

import (
	"fmt"
)

// YesOrNo is an Enum.
type YesOrNo string

// YesOrNoFromString returns a YesOrNo from it's string representation.
func YesOrNoFromString(s string) (YesOrNo, error) {
	switch s {
	case AnswerYes.String(), AnswerYes.Value():
		return AnswerYes, nil
	case AnswerNo.String(), AnswerNo.Value():
		return AnswerNo, nil
	case AnswerMaybe.String(), AnswerMaybe.Value():
		return AnswerMaybe, nil
	default:
		return YesOrNo(-1), fmt.Errorf("unknown YesOrNo %s", s)
	}
}

func (v YesOrNo) String() string {
	switch v {
	case AnswerYes:
		return "Yes"
	case AnswerNo:
		return "No"
	case AnswerMaybe:
		return "Maybe"
	default:
		return ""
	}
}

// Value returns the actual value for the enum type.
func (v YesOrNo) Value() string {
	switch v {
	case AnswerYes:
		return "Y"
	case AnswerNo:
		return "N"
	case AnswerMaybe:
		return "M"
	default:
		return ""
	}
}

// Valid returns false if the YesOrNo isn't valid.
func (v YesOrNo) Valid() bool {
	switch v {
	case AnswerYes:
		return true
	case AnswerNo:
		return true
	case AnswerMaybe:
		return true
	default:
		return false
	}
}
